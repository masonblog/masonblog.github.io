<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>科技分享 on Mason&#39;s Blog</title>
    <link>https://masonblog.github.io/tags/%E7%A7%91%E6%8A%80%E5%88%86%E4%BA%AB/</link>
    <description>Recent content in 科技分享 on Mason&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Mon, 17 Mar 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://masonblog.github.io/tags/%E7%A7%91%E6%8A%80%E5%88%86%E4%BA%AB/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>年费15元的奥地利 eSIM 电话卡：RedteaGo</title>
      <link>https://masonblog.github.io/post/blog20250317/</link>
      <pubDate>Mon, 17 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://masonblog.github.io/post/blog20250317/</guid>
      <description>&lt;p&gt;由于个人的一些特殊需求，我经常需要用到海外手机号，也因此一直在寻找经济实惠、性能稳定的海外电话卡。之前，我一直在使用美国 UltraMobile 每月 3 美元 的 PayGo 卡，以及香港 3HK 每年 268HKD、45G 流量的漫游卡。这两张卡都各有各的劣势：PayGo 卡在国内只能接打电话、收发短信，无法漫游上网；3HK 可以在国内漫游上网，但它使用的 IP 地址是香港的，无法登录 ChatGPT，也无法接打电话或收发短信。因此，长久以来我一直在寻找一款既能在国内漫游上网（非香港 IP 地址）、又能接收短信，并且价格不能太贵的海外电话卡，直到我发现了一家奥地利运营商 RedteaMobile 的全球上网手机卡——&lt;a href=&#34;https://www.redteamobile.com/redtea-go-consumer/#&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RedteaGo&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p&gt;RedteaGo 的全球套餐有以下几点优势：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;有效期内（最长365天，可续费）可&lt;strong&gt;免费接收短信&lt;/strong&gt;，注册各类 APP【仅全球套餐】&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;支持全球130+地区（包括中国大陆）的漫游上网，&lt;strong&gt;且 IP 地址在欧洲&lt;/strong&gt;，可以轻松登录 ChatGPT【仅全球套餐】&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;价格低廉，100MB 保号套餐仅需 3.2 美元/年，若叠加邀请码赠金，则&lt;strong&gt;最低 2 美元（约合人民币15元）即可保号一年&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;支持 eSIM&lt;/strong&gt;，无需实体卡即可轻松激活&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;无需实名登记&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://masonblog.github.io/images/blog20250317/plan.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;RedteaGo 的套餐可以在&lt;a href=&#34;https://www.redteamobile.com/redtea-go-consumer/#&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;官方网站&lt;/a&gt;或者&lt;a href=&#34;https://www.bing.com/search?q=Redteago%20app&amp;amp;qs=n&amp;amp;form=QBRE&amp;amp;sp=-1&amp;amp;ghc=1&amp;amp;lq=0&amp;amp;pq=redteago%20ap&amp;amp;sc=10-11&amp;amp;sk=&amp;amp;cvid=D381E19FE4DF4851B12936EAE9837E7E&amp;amp;ghsh=0&amp;amp;ghacc=0&amp;amp;ghpl=&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;官方APP&lt;/a&gt;上直接购买，如果你的手机支持 eSIM，那么可以通过官方APP直接购买；如果你的手机不支持 eSIM，需要借助第三方实体 eSIM 卡，那么最好在官方网站上下单，因为&lt;strong&gt;只有官方网站下单的套餐才会提供 eSIM 二维码&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt;先用邮箱注册一个 RedteaGo 账号，注册时可以使用我的邀请码&lt;code&gt;MASO0042&lt;/code&gt;，这样你和我都可以获得 3 美元的赠金，后续购买套餐时可以直接抵用。叠加邀请码赠金后，最低只要 2 美元就能保号一整年。&lt;/p&gt;&#xA;&lt;p&gt;注册完成后，就可以选购套餐了。&lt;strong&gt;如果想要在购买套餐时使用上面的 3 美元赠金，一定要先往账户里充值，再购买套餐&lt;/strong&gt;，因为如果购买套餐时账户余额低于套餐金额的话，就只能选择直接支付套餐金额，无法抵扣邀请码赠金，这点一定切记。&lt;/p&gt;&#xA;&lt;p&gt;账户充值的最小金额是 2 美元，支付方式可以选择Apple Pay、国际信用卡或支付宝等，下图为  RedteaGo APP 内的充值演示。&lt;strong&gt;注意充值前先看好你想购买套餐的价格，确保充值金额+3美元赠金要大于套餐价格，才能在购买套餐时抵扣&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt;以最便宜的 3.2 美元套餐为例，用邀请码注册账号的初始余额为 3 美元（赠送），那么我们只要充值最低的 2 美元，即可拥有 3+2=5 美元的余额。购买套餐时选择用余额支付，则购买完成后，账户中还剩下 5-3.2=1.8 美元，可用于下次购买其他套餐使用。 &lt;img loading=&#34;lazy&#34; src=&#34;https://masonblog.github.io/images/blog20250317/topup.jpg&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>利用第三方 Deepseek API 实现 AI 辅助应用</title>
      <link>https://masonblog.github.io/post/blog20250207/</link>
      <pubDate>Fri, 07 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://masonblog.github.io/post/blog20250207/</guid>
      <description>&lt;p&gt;最近一段时间，AI 圈最热的话题莫过于 &lt;a href=&#34;https://www.deepseek.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Deepseek&lt;/a&gt;。它作为国内团队“弯道超车”的典型案例，同时受到两种不同立场群体的吹捧与批评。不过，抛开政治和技术上的争论，单从普通人使用 AI 的成本与门槛来看，Deepseek 确实做到了“AI 的普惠性”。与 OpenAI 等国外大模型运营商相比，Deepseek 的价格极为低廉，对想要学习 AI 应用，而经济条件又非常有限的用户来说，确实是最好的选择。&lt;/p&gt;&#xA;&lt;p&gt;然而，&lt;strong&gt;受自身承载能力和大规模黑客攻击的限制，Deepseek 的官方服务器在最近一段时间经常会出现连接不稳定的问题&lt;/strong&gt;，这给用户带来了不便。&lt;strong&gt;所幸，Deepseek 大模型的开源属性使其能够被部署在任何第三方服务器上&lt;/strong&gt;。&lt;a href=&#34;https://siliconflow.cn/zh-cn/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;硅基流动&lt;/a&gt;便是众多第三方 AI 大模型供应商之一，它与&lt;a href=&#34;https://www.huaweicloud.com/intl/zh-cn/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;华为云&lt;/a&gt;合作，以低廉的价格，向用户提供Deepseek r1大模型的API接口应用。用户可以通过这一接口顺利使用 Deepseek 的模型功能。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://masonblog.github.io/images/blog20250207/SiliconFlow.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;获取第三方-deepseek-api&#34;&gt;获取第三方 Deepseek API&lt;/h2&gt;&#xA;&lt;p&gt;首先，我们需要在硅基流动的&lt;a href=&#34;https://cloud.siliconflow.cn/i/1MwHUt0X&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;官网&lt;/a&gt;注册一个账号。你可以使用我的邀请码&lt;code&gt;1MwHUt0X&lt;/code&gt;注册，这样，&lt;strong&gt;你和我都会得到 14 CNY 的免费额度&lt;/strong&gt;，可以用来免费体验各个大模型的功能。&lt;strong&gt;如果免费额度用完，想要付费充值的话，就必须完成实名认证&lt;/strong&gt;，这也是中国特色的监管要求。&lt;/p&gt;&#xA;&lt;p&gt;登录硅基流动的后台，我们就能看到它所支持的一系列大模型，其中就包含当下最热门的 Deepseek R1。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://masonblog.github.io/images/blog20250207/SiliconFlow2.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;想要调用这些大模型为我们服务，首先要生成我们自己的 API Key。点击硅基流动后台左侧的&lt;code&gt;API 密钥&lt;/code&gt;，再点击右上角的&lt;code&gt;新建 API 密钥&lt;/code&gt;按钮，来新建一个 API Key。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://masonblog.github.io/images/blog20250207/SiliconFlow3.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;结合-chatbox-使用-deepseek-r1-大模型&#34;&gt;结合 Chatbox 使用 Deepseek R1 大模型&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://chatboxai.app/zh&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chatbox&lt;/a&gt; 是一款开源的AI聊天机器人客户端，支持包括个人电脑和移动端几乎所有平台（包括网页端），能够调用多种AI模型，以实现文字对话、文生图、程序编写、文案创作等诸多用途。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://masonblog.github.io/images/blog20250207/Chatbox.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;出于数据安全与隐私保护的考虑，Chatbox 的所有运行数据都只存储在本地。也就是说，Chatbox 本身只是一个向AI大模型传递数据的工具，它本身并不记录用户的数据。因此，即使我们在不同设备上同时使用 Chatbox，也无法做到配置设置和历史记录的多设备共享。&lt;/p&gt;&#xA;&lt;p&gt;硅基流动的&lt;a href=&#34;https://docs.siliconflow.cn/usercases/use-siliconcloud-in-chatbox&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;官方文档&lt;/a&gt;中提供了将其API接入 Chatbox 的指引。这里简单讲一下配置的重点。软件安装好以后，第一次打开会自动弹出设置界面。&lt;del&gt;选择&amp;quot;添加自定义提供方&amp;quot;，API 域名填写https://api.siliconflow.cn即可&lt;/del&gt;。&lt;strong&gt;更新版本的 Chatbox 已经原生支持了硅基流动的 API 接口&lt;/strong&gt;，只要在模型提供方处选择&lt;code&gt;SILICONFLOW API&lt;/code&gt;，再填写自己的 API Key，并选择想要调用的模型即可。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://masonblog.github.io/images/blog20250207/Chatbox2.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;值得注意的是，硅基流动同时提供了&lt;code&gt;Pro/deepseek-ai/DeepSeek-R1&lt;/code&gt;和&lt;code&gt;deepseek-ai/DeepSeek-R1&lt;/code&gt;两个R1模型，只有不带&lt;code&gt;Pro&lt;/code&gt;的那个模型支持消耗平台赠送的免费额度，带&lt;code&gt;Pro&lt;/code&gt;的必须付费充值后才能使用，选的时候不要选错了。&lt;/p&gt;&#xA;&lt;p&gt;配置好后点击保存，就可以开始和我们的AI大模型聊天了。Chatbox 软件内预置了很多好用的 Prompt 场景，可以都尝试一下。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hugo &amp; PaperMod 建站技术记录</title>
      <link>https://masonblog.github.io/post/blog20241230/</link>
      <pubDate>Mon, 30 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://masonblog.github.io/post/blog20241230/</guid>
      <description>&lt;p&gt;早在4年前刚开始搭建本博客时，我曾写过一篇简短的&lt;a href=&#34;https://masonblog.github.io/post/blog20200310/&#34;&gt;文章&lt;/a&gt;，介绍了我建站时使用的一些工具。如今，那篇文章中提到的很多工具都已过时。加之本次博客整体迁移，又使用了全新的 &lt;a href=&#34;https://github.com/adityatelange/hugo-PaperMod&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PaperMod &lt;/a&gt;主题，很多功能的配置方式都发生了变化。于是我决定重新写一篇文章，记录一下我在折腾这个新主题过程中的一些技术细节。&lt;/p&gt;</description>
    </item>
    <item>
      <title>HomeAssistant 米家官方集成的安装与使用</title>
      <link>https://masonblog.github.io/post/blog20241227/</link>
      <pubDate>Fri, 27 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://masonblog.github.io/post/blog20241227/</guid>
      <description>&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;&#xA;&lt;p&gt;我在2022年4月的一篇&lt;a href=&#34;https://masonblog.github.io/post/blog20220409/&#34;&gt;文章&lt;/a&gt;中介绍了 &lt;a href=&#34;https://www.home-assistant.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Home Assistant&lt;/a&gt; 的安装与配置方法。彼时，要将小米的众多智能家居接入 HA，我们必须安装一个第三方 HA 集成，即 &lt;a href=&#34;https://github.com/al-one/hass-xiaomi-miot&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hass-Xiaomi-Miot&lt;/a&gt;。它由个人开发者 &lt;a href=&#34;https://github.com/al-one&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;al-one&lt;/a&gt; 在 Github 上发布，一直以来都是我们将米家接入 HA 的唯一选择。直到最近，&lt;a href=&#34;https://github.com/XiaoMi&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;小米&lt;/a&gt;在 Github 上发布了官方的 HA 集成：&lt;a href=&#34;https://github.com/XiaoMi/ha_xiaomi_home&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HA_Xiaomi_Home&lt;/a&gt;，填补了米家接入 HA 的空白。&lt;/p&gt;&#xA;&lt;p&gt;虽然这又是一个“官方逼死同人”的故事，但小米的开源精神仍然值得称赞。与第三方集成相比，小米官方的集成对自家产品支持更好， 能够帮助我们更加轻松地将米家接入 HA，进而实现米家与 Homekit 生态的互联互通。今天，我们将跟随 HA_Xiaomi_Home 的&lt;a href=&#34;https://github.com/XiaoMi/ha_xiaomi_home/blob/main/doc/README_zh.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;官方文档&lt;/a&gt;，详细介绍一下这个集成的安装及使用方法。&lt;/p&gt;&#xA;&lt;h2 id=&#34;通过-hasc-安装米家官方集成&#34;&gt;通过 HASC 安装米家官方集成&lt;/h2&gt;&#xA;&lt;p&gt;米家官方集成有多种安装方式，其中最简单，也是最新手友好的方式，就是通过 &lt;a href=&#34;https://www.hacs.xyz/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HACS&lt;/a&gt; 进行安装。HASC 的安装方法详见我的这篇文章，此处不再赘述。&lt;strong&gt;由于米家官方集成暂未加入 HASC 的官方库，我们需要通过添加自定义库链接的方式，将米家官方集成的库链接添加到 HASC 目录&lt;/strong&gt;。登入 HA 后台，点击左侧的&lt;code&gt;HASC&lt;/code&gt;，再点右上角的三个点，选择&lt;code&gt;Custom Repositories&lt;/code&gt;，新建一个自定义库链接，如下图所示。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image&#34; loading=&#34;lazy&#34; src=&#34;https://masonblog.github.io/images/blog20241227/hacs1.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;库类型（Catagory）选择&lt;code&gt;Integration&lt;/code&gt;；库链接填写下面的链接：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;https://github.com/XiaoMi/ha_xiaomi_home.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最后点击ADD按钮，如果网络没有问题的话，米家官方集成的安装链接就会被添加到 HASC 的自定目录中。再依次点击设置—设备与集成—添加集成，在搜索框中输入&lt;code&gt;Xiaomi&lt;/code&gt;，在弹出的结果中选择&lt;code&gt;XIaomi Home&lt;/code&gt;。接下来，按照提示登录米家账号即可。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;image&#34; loading=&#34;lazy&#34; src=&#34;https://masonblog.github.io/images/blog20241227/hacs2.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://masonblog.github.io/images/blog20241227/xiaomi-home-auth1.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;注意&amp;#x26a0;&amp;#xfe0f;：&lt;strong&gt;如果你和我一样，使用 Docker 作为 HA 的安装环境，那么大概率会在米家账号验证时遇到无法跳转的问题&lt;/strong&gt;。无法跳转的核心原因在于，米家官方集成默认使用 &lt;code&gt;homeassistant.local:8123&lt;/code&gt;这个本地域名来跳转回 HA 页面，而 Docker 容器中的 HA 无法在本地局域网中广播&lt;code&gt;.local&lt;/code&gt;本地域名。因此，在验证米家账号并跳转回 HA 页面时，我们需要手动将浏览器地址栏中的&lt;code&gt;homeassistant.local:8123&lt;/code&gt;改为&lt;code&gt;IP:8123&lt;/code&gt;。这样就能完成米家账号的验证工作。以上方法参考自米家集成仓库的 &lt;a href=&#34;https://github.com/XiaoMi/ha_xiaomi_home/issues/8&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Issue#8&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://masonblog.github.io/images/blog20241227/xiaomi-home-auth.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;停用多余的米家实体&#34;&gt;停用多余的米家实体&lt;/h1&gt;&#xA;&lt;p&gt;当我们安装好米家官方集成并完成账号验证后，HA 就会自动搜索并添加米家的各种设备。同时，我们的家庭中会出现一堆乱七八糟的实体。&lt;strong&gt;所谓实体（Unit）是 HA 用来定义设备最小子功能单元的概念&lt;/strong&gt;。通常一个设备会对应多个实体。例如，一台『热水器』设备，可以同时拥有『当前水温』、『目标水温』、『预热开关』、『增压开关』等多个实体。&lt;/p&gt;&#xA;&lt;p&gt;然而在日常使用过程中，我们并不需要将每一个设备都拆分成诸多零碎的子功能单元，这样不仅使人迷惑，还会让我们的家庭界面变得极其繁琐。因此，在将 HA 链接到 Homekit 之前，我们需要对米家集成添加进来的众多实体进行筛选，仅保留我们日常使用过程中最需要的开关和数值即可。&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何配置路由器的 DHCP ?</title>
      <link>https://masonblog.github.io/post/blog20220518/</link>
      <pubDate>Wed, 18 May 2022 00:00:00 +0000</pubDate>
      <guid>https://masonblog.github.io/post/blog20220518/</guid>
      <description>&lt;h2 id=&#34;开场&#34;&gt;开场&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;经常折腾家里网络的你，一定经常遇到这些问题：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;为什么明明插上了网线，却&lt;strong&gt;打不开&lt;/strong&gt;路由器的后台？&lt;/li&gt;&#xA;&lt;li&gt;为什么 NAS 的 IP 地址经常&lt;strong&gt;变化&lt;/strong&gt;？&lt;/li&gt;&#xA;&lt;li&gt;为什么用上了高价的软路由，打开网页的速度反而&lt;strong&gt;变慢&lt;/strong&gt;？&lt;/li&gt;&#xA;&lt;li&gt;为什么跟着大佬的视频一通配置，却还是玩不转&lt;strong&gt;旁路由&lt;/strong&gt;？&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;以上这些问题其实都和 DHCP 有关。&lt;/p&gt;</description>
    </item>
    <item>
      <title>利用 Home Assistant 搭建智能家居中枢</title>
      <link>https://masonblog.github.io/post/blog20220409/</link>
      <pubDate>Sat, 09 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://masonblog.github.io/post/blog20220409/</guid>
      <description>&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;&#xA;&lt;p&gt;随着智能家居的日益普及，各大互联网巨头纷纷进场，导致智能家居的平台和品牌越来越多，且各个平台和品牌间的产品无法互通。例如，你无法用米家的智能开关来控制 homekit 的智能灯，除非你的产品支持双平台，但目前同时支持两个以上平台的智能家居少之又少。&lt;/p&gt;</description>
    </item>
    <item>
      <title>利用 Portainer 实现 Docker 端 Jellyfin 硬件解码</title>
      <link>https://masonblog.github.io/post/blog20210909/</link>
      <pubDate>Thu, 09 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://masonblog.github.io/post/blog20210909/</guid>
      <description>&lt;h2 id=&#34;原理及环境检测&#34;&gt;原理及环境检测&lt;/h2&gt;&#xA;&lt;p&gt;随着版本的不断迭代，&lt;a href=&#34;https://jellyfin.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jellyfin&lt;/a&gt; 已经逐渐超过 &lt;a href=&#34;https://www.plex.tv&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plex&lt;/a&gt;  和自家兄弟 &lt;a href=&#34;https://emby.media&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Emby&lt;/a&gt;，成为用户数量最所的个人媒体管理方案，这不仅因为它的所有功能均为免费，更是因为它的源代码完全开源，具有极高的维护与拓展空间。&lt;/p&gt;</description>
    </item>
    <item>
      <title>实测苹果专用转接代理可用于翻墙，但中国大陆地区无法使用</title>
      <link>https://masonblog.github.io/post/blog20210608/</link>
      <pubDate>Tue, 08 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://masonblog.github.io/post/blog20210608/</guid>
      <description>&lt;p&gt;昨晚熬夜看了今年的 Apple &lt;a href=&#34;https://developer.apple.com/wwdc21/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;WWDC&lt;/a&gt; 直播。虽然今年没有发布任何硬件设备，但 iOS 15 和 macOS Monterey 的一些新的功能特性确实解决了我的好几个痛点。&lt;/p&gt;</description>
    </item>
    <item>
      <title>利用 Favicon 为 Hugo 静态站点添加图标</title>
      <link>https://masonblog.github.io/post/blog20210527/</link>
      <pubDate>Thu, 27 May 2021 00:00:00 +0000</pubDate>
      <guid>https://masonblog.github.io/post/blog20210527/</guid>
      <description>&lt;p&gt;我们在使用 &lt;a href=&#34;https://gohugo.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo&lt;/a&gt; 生成静态站点时，经常会遇到一些虽不致命，但很不爽的小问题，例如没有自定义站点图标的问题。假如我们跟随了所用主题的默认配置，通常情况下生成的站点要么没有图标，要么直接套用主题自带的图标，这显然无法满足我那强烈的 DIY 欲望。&lt;/p&gt;</description>
    </item>
    <item>
      <title>桥接模式下 Openwrt 软路由直接访问光猫后台</title>
      <link>https://masonblog.github.io/post/blog20210505/</link>
      <pubDate>Wed, 05 May 2021 00:00:00 +0000</pubDate>
      <guid>https://masonblog.github.io/post/blog20210505/</guid>
      <description>&lt;p&gt;光猫开启桥接模式后，软路由作为默认网关进行拨号与 NAT，导致客户端设备无法获取与光猫相同网段的 IP 地址，进而也就无法登陆光猫的后台管理界面。虽然在日常使用的过程中，光猫的配置几乎是一次性的，其后台管理界面的使用频率很低，但是每次登陆光猫后台都要通过有线或无线（若有）的方式将设备直接与光猫相连也着实麻烦。因此需要通过一些简单的配置，实现桥接模式下，连接软路由的同时可以随时访问光猫后台。&lt;/p&gt;</description>
    </item>
    <item>
      <title>利用 Parsec 实现远程游戏串流</title>
      <link>https://masonblog.github.io/post/blog20210502/</link>
      <pubDate>Sun, 02 May 2021 00:00:00 +0000</pubDate>
      <guid>https://masonblog.github.io/post/blog20210502/</guid>
      <description>&lt;p&gt;最近，我终于放弃了 Steam 或 Epic Games 等平台的买断制游戏模式，转而投靠了 &lt;a href=&#34;https://www.xbox.com/zh-HK/xbox-game-pass&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Xbox Game Pass (XGP)&lt;/a&gt; 这样的订阅制模式。尽管买断制可以极大地满足“喜加一”式的收集欲，但自从开始实习之后，我已经很难抽出整块的时间来通关各类单机游戏，以致于我的游戏库中屯了大量已购买的但未通关的游戏，这不仅降低了我购买和尝试最新游戏的欲望，也在资金上造成了很大的浪费。不知从什么时候起，玩游戏竟也成了一种待完成的“任务”，失去了工作之余放松心情的初衷。&lt;/p&gt;</description>
    </item>
    <item>
      <title>解决蜗牛星际B双安装黑群晖失败“文件已损毁（13）”</title>
      <link>https://masonblog.github.io/post/blog20210423/</link>
      <pubDate>Fri, 23 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://masonblog.github.io/post/blog20210423/</guid>
      <description>&lt;p&gt;去年疫情期间，由于滞留家中实在无聊，我开始折腾软路由和 DIY NAS，而被折腾得最多的莫过于黑&lt;a href=&#34;https://www.synology.com/en-us/dsm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;群晖&lt;/a&gt;系统。为此，我特意买来两台蜗牛星际（B双和C），其中B双用作软路由，C则用于黑群晖。时隔一年，忙于工作的我已不再有闲暇时间折腾黑群晖，而出于对数据安全和便捷性的考虑，我于今年年初购买了一台威联通的 NAS 主机。俗话说得好，黑群晖折腾到头，就会转去白群辉。但奈何威联通的性价比要比群晖高太多，因此我只好无耻地叛变了革命。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Openwrt Luci Openvpn 服务器多设备同时接入</title>
      <link>https://masonblog.github.io/post/blog20210413/</link>
      <pubDate>Tue, 13 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://masonblog.github.io/post/blog20210413/</guid>
      <description>&lt;p&gt;我们日常使用的 Openwrt 软路由系统几乎都集成了 &lt;a href=&#34;https://openwrt.org/docs/guide-user/luci/start&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Luci 界面&lt;/a&gt;，它不仅可以为用户提供便利的可视化后台管理界面，还在各路大神的贡献下，适配了众多简单易用的图形化 App。&lt;a href=&#34;https://github.com/DavBfr/luci-app-openvpn-server&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Luci-app-openvpn-server&lt;/a&gt; 就是众多 Luci 应用中最常用的 VPN 服务器之一。&lt;/p&gt;</description>
    </item>
    <item>
      <title>利用 Docker 搭建 Trilium Notes 服务器</title>
      <link>https://masonblog.github.io/post/blog20210320/</link>
      <pubDate>Sat, 20 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://masonblog.github.io/post/blog20210320/</guid>
      <description>&lt;p&gt;由于平时需要处理大量结构复杂的内容，并且各内容板块间还存在相互交叉的引用关系，因此长久以来我一直在寻找一款既能满足需求，又简洁易用的内容管理工具。印象笔记或 OneNote 等笔记类服务似乎最为常见，但一来，将所有的私人内容存储在商业公司的服务器上总会让我缺乏安全感；二来这些软件要么不够轻便，要么对重要功能额外收费，因此一直都无法让我十分满意。&lt;/p&gt;</description>
    </item>
    <item>
      <title>通过群晖与 Openwrt 软路由实现自动端口映射</title>
      <link>https://masonblog.github.io/post/blog20200914/</link>
      <pubDate>Mon, 14 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://masonblog.github.io/post/blog20200914/</guid>
      <description>&lt;p&gt;要在家庭或公司的局域网以外（俗称外网）访问家中或公司内网的设备（例如 &lt;a href=&#34;https://baike.baidu.com/item/NAS&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NAS&lt;/a&gt;），通常有两种方式。第一种方式是在局域网的路由器上架设一个 VPN 服务器，再将外网的终端设备作为 VPN 客户端接入内网。在这种情况下，&lt;a href=&#34;https://baike.baidu.com/item/VPN&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;VPN（虚拟专有网络）&lt;/a&gt;充当了网线的角色，即接入 VPN 的外网设备，就相当于拉了一根通往内网的网线。因此在 VPN 网络中，即使这根网线是虚拟的，也能实现如同身处局域网内一般的访问体验。&lt;/p&gt;</description>
    </item>
    <item>
      <title>利用 NAS、Docker 和 Calibre Web 搭建个人线上书库</title>
      <link>https://masonblog.github.io/post/blog20200512/</link>
      <pubDate>Tue, 12 May 2020 00:00:00 +0000</pubDate>
      <guid>https://masonblog.github.io/post/blog20200512/</guid>
      <description>&lt;p&gt;经常阅读电子书并且用过 Kindle 的人应该都体会过整理电子书时的痛苦。尤其是像我这种经常下载电子书文件再导入到 Kindle 上进行阅读的人（或是为了省钱、或是因为 Kindle 商城中没有我们想要阅读的书），对于那些有着各自不同的标题、作者、封面，以及文件格式的纷繁复杂的电子书，缺乏一套行之有效的管理方案，进而充分管理自己的阅读进度与时间。&lt;/p&gt;</description>
    </item>
    <item>
      <title>可能是最好用的记忆辅助工具 Anki</title>
      <link>https://masonblog.github.io/post/blog20200326/</link>
      <pubDate>Thu, 26 Mar 2020 00:00:00 +0000</pubDate>
      <guid>https://masonblog.github.io/post/blog20200326/</guid>
      <description>&lt;p&gt;对包括我在内的相当一部分人来说，记单词几乎已经成为一种刚需。无论是为了应付考试、取得各类等级证书还是单纯提高语言能力，词汇都是我们不得不正面应对的挑战。而在如今这个互联网时代，捧着厚重的词汇书或者词典进行背诵的方式已经被大多数人所抛弃，因为它既枯燥又低效，不仅会消磨我们学习一门语言的热情，还不利于培养语感、付诸实用。&lt;/p&gt;</description>
    </item>
    <item>
      <title>MacOS 10.15.4 更新 iCloud 文件分享功能</title>
      <link>https://masonblog.github.io/post/blog20200325/</link>
      <pubDate>Wed, 25 Mar 2020 00:00:00 +0000</pubDate>
      <guid>https://masonblog.github.io/post/blog20200325/</guid>
      <description>&lt;p&gt;相比于国外而言，中国国内的公共网盘生态好似一潭死水。这其中固然也有厂商不思进取的缘故，但更主要的还是政府对网络信息的严密审查，使得公共网盘服务提供商很难在维持自身生存和提升用户体验之间取得平衡。&lt;/p&gt;</description>
    </item>
    <item>
      <title>利用 Hugo 和 Github Pages 搭建自己的个人博客</title>
      <link>https://masonblog.github.io/post/blog20200310/</link>
      <pubDate>Tue, 10 Mar 2020 00:00:00 +0000</pubDate>
      <guid>https://masonblog.github.io/post/blog20200310/</guid>
      <description>&lt;p&gt;如你所见，此博客是一个完全静态的 HTML 站点。相比于 PHP 编写的动态站点，静态站点不仅访问速度更快，而且部署门槛低。一个完全不会编程的新手，只要花点时间掌握一些工具的用法，也能轻松建立属于自己的站点。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
